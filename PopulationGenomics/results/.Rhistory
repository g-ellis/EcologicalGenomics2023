pwd
fwd
tinytex::install_tinytex()
options(repos = list(CRAN="http://cran.rstudio.com/"))
# Read in the data
DressedMooseMass <- read.csv(file = "Moose_RawData.csv")
# Read in the data
DressedMooseMass <- read.csv(file = "Moose_RawData.csv")
file.choose()
# Read in the data
DressedMooseMass <- read.csv(file = "Moose_RawData.csv")
library(readr)
Moose_RawData <- read_csv("BCOR2100/Moose_RawData.csv")
View(Moose_RawData)
getwd
getwed()
getwd()
setwd("Users/gwen/Documents/BCOR2100")
xvalues <- c(1,2,3,4,5,6)
yvalues <- c(10,20,30,40,50,60)
plot(xvalues, yvalues)
x_values <- c(1,2,3,4,5,6)
y_values <- c(10,20,30,40,50,60)
plot(x_values, y_values)
3-2
3^2-2
3 - 2
airTemp <- c(32,34,35,37,39,40)
print(airtemp)
print(airTemp)
summary(airTemp)
batAbundance <- c(100,104,98,132,138,150)
summary(batAbundance)
plot(x=airTemp, y=batAbundance)
plot(x=airTemp, y=batAbundance, type="o")
example(plot)
cat <- 4
library(RcppCNPy) # for reading python numpy (.npy) files
### read in selection statistics (these are chi^2 distributed)
selectionstats<-npyLoad("allRS_poly.selection.npy") # this file was made using e=2
setwd("~/Documents/GitHub/EcologicalGenomics2023/PopulationGenomics/results")
library(RcppCNPy) # for reading python numpy (.npy) files
### read in selection statistics (these are chi^2 distributed)
selectionstats<-npyLoad("allRS_poly.selection.npy") # this file was made using e=2
# convert test statistic to p-value
pval <- as.data.frame(1-pchisq(selectionstats,1))
names(pval) = c("p_PC1", "p_PC2")
## read positions, associate P-values with SNP meta-data
p <- read.table("allRS_poly_mafs.sites",sep="\t",header=T, stringsAsFactors=T) # this file was made using e=2
dim(p)
p_filtered = p[which(p$kept_sites==1),]
dim(p_filtered)
# How many sites got filtered out when testing for selection? -> 132274 Why?
View(selectionstats)
View(p_filtered)
View(p)
############################################
#  Getting BioClim data for spruce samples #
############################################
library(raster) #spatial data package
library(FactoMineR) #PCA in R
library(factoextra) #PCA in R
library(corrplot) #plotting and data vis package
bio <- getData("worldclim",var="bio",res=10)
coords <- read.csv("https://www.uvm.edu/~kellrlab/forClass/colebrookSampleMetaData.csv", header=T)
#The chunk below refers to your bamlist file that you transferred during last week's PCA/admixture analysis. It should be the same one you want to use here -- if your sample list for analysis changes in the future, you'll need a different bamlist!
names <- read.table("e2_allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam")) #removing path to just get sample ID
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
# merging coordinate data from meta-data df with our delimited "pops" df
angsd_coords <- merge(pops, coords, by.x="Ind", by.y="Tree")
points <- SpatialPoints(angsd_coords[c("Longitude","Latitude")])
#associate variables that correspond with our tree sample latitude-longitude points
clim <- extract(bio,points)
angsd_coords_clim <- cbind.data.frame(angsd_coords,clim)
str(angsd_coords_clim)
### Make the climate PCA: ###
clim_PCA = PCA(angsd_coords_clim[,15:33], graph=T)
# Get a screeplot of cliamte PCA eigenvalues
fviz_eig(clim_PCA)
# What is the climate PCA space our red spruce pops occupy?
fviz_pca_biplot(clim_PCA,
geom.ind="point",
col.ind = angsd_coords_clim$Latitude,
gradient.cols = c("#FC4E07", "#E7B800", "#00AFBB"),
title="Climate PCA (Bioclim)",
legend.title="Latitude")
# Which variables show the strongest correlation on the first 2 climate PC axes?
dimdesc(clim_PCA)[1:2]
# PC1 has strongest correlation with Bio 12 (mean precipitation) and PC2 has the strongest correlation with Bio 10 (mean temperature of warmest quarter) --> these are the two bioClim variables we'll use for our GEA
write.table(scale(angsd_coords_clim["bio12"]),
"e2_allRS_bio12.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
write.table(scale(angsd_coords_clim["bio10"]),
"e2_allRS_bio10.txt",
sep="\t",
quote=F,
row.names = F,
col.names=F)
### back to bash to run GEA ###
# Which variables show the strongest correlation on the first 2 climate PC axes?
dimdesc(clim_PCA)[1:2]
library(ggplot2) # plotting
library(ggpubr) # plotting
e2_COV <- as.matrix(read.table("e2_allRS_poly.cov")) # read in the genetic covariance matrix
e2_PCA <- eigen(e2_COV) # extract the principal components from the COV matrix
## How much variance is explained by the first few PCs?
var <- round(e2_PCA$values/sum(e2_PCA$values),3)
var[1:3]
barplot(var,
xlab="Eigenvalues of the PCA",
ylab="Proportion of variance explained")
## Bring in the bam.list file and extract the sample info:
names <- read.table("allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam"))
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
library(raster) #spatial data package
library(FactoMineR) #PCA in R
library(factoextra) #PCA in R
library(corrplot) #plotting and data vis package
bio <- getData("worldclim",var="bio",res=10)
coords <- read.csv("https://www.uvm.edu/~kellrlab/forClass/colebrookSampleMetaData.csv", header=T)
names <- read.table("e2_allRS_bam.list")
names <- unlist(strsplit(basename(as.character(names[,1])), split = ".sorted.rmdup.bam")) #removing path to just get sample ID
split = strsplit(names, "_")
pops <- data.frame(names[1:95], do.call(rbind, split[1:95]))
names(pops) = c("Ind", "Pop", "Row", "Col")
# merging coordinate data from meta-data df with our delimited "pops" df
angsd_coords <- merge(pops, coords, by.x="Ind", by.y="Tree")
points <- SpatialPoints(angsd_coords[c("Longitude","Latitude")])
#associate variables that correspond with our tree sample latitude-longitude points
clim <- extract(bio,points)
angsd_coords_clim <- cbind.data.frame(angsd_coords,clim)
str(angsd_coords_clim)
clim_PCA = PCA(angsd_coords_clim[,15:33], graph=T)
fviz_eig(clim_PCA)
fviz_pca_biplot(clim_PCA,
geom.ind="point",
col.ind = angsd_coords_clim$Latitude,
gradient.cols = c("#FC4E07", "#E7B800", "#00AFBB"),
title="Climate PCA (Bioclim)",
legend.title="Latitude")
